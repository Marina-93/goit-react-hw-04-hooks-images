{"version":3,"sources":["component/Searchbar/Searchbar.js","component/ImageGalleryItem/ImageGalleryItem.js","component/ImageGallery/ImageGallery.js","component/Modal/Modal.js","component/Button/Button.js","App.js","index.js"],"names":["Searchbar","onSubmit","useState","value","setValue","className","e","preventDefault","trim","type","name","onChange","target","toLowerCase","autoComplete","autoFocus","placeholder","ImageGalleryItem","id","webformatURL","tags","largeImageURL","showModal","data","onClick","src","alt","ImageGallery","images","modalData","map","propTypes","PropTypes","array","func","modalRoot","document","querySelector","Modal","onClose","onCloseByClick","nodeName","onCloseByKedown","code","useEffect","window","addEventListener","removeEventListener","createPortal","Button","App","page","setPage","setImages","status","setStatus","setShowModal","modalSrc","setModalSrc","modalAlt","setModalAlt","BaseURL","keyURL","toggleModal","prev","fetch","then","res","json","hits","color","height","width","length","prevState","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.469f8fd3.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport './Searchbar.css';\r\n\r\nexport default function Searchbar({onSubmit}) {\r\n    const [value, setValue] = useState('')\r\n\r\n    const handleChange = e => {\r\n        setValue(e.target.value.toLowerCase())\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        \r\n        if (value.trim() === '') {\r\n            return;\r\n        }\r\n        \r\n        onSubmit(value)\r\n        setValue('')\r\n    }\r\n\r\n    return (\r\n        <header className=\"searchbar\">\r\n            <form onSubmit={handleSubmit} className=\"form\">\r\n                <button type=\"submit\" className=\"button\">\r\n                    <span className=\"button-label\">Search</span>\r\n                </button>\r\n                \r\n                <input\r\n                    className=\"input\"\r\n                    type=\"text\"\r\n                    name=\"value\"\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    autoComplete=\"off\"\r\n                    autoFocus\r\n                    placeholder=\"Search images and photos\"\r\n                    />\r\n            </form>\r\n        </header>\r\n    )\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n}","import PropTypes from 'prop-types';\r\nimport './ImageGalleryItem.css';\r\n\r\nexport default function ImageGalleryItem({ id, webformatURL, tags, largeImageURL, showModal, data}) {\r\n    return (\r\n        <li className=\"ImageGalleryItem\" key={id}\r\n            onClick={() => data(largeImageURL, tags)}>\r\n            <img\r\n                className=\"ImageGalleryItem-image\"\r\n                src={webformatURL}\r\n                alt={tags}\r\n                onClick={showModal}\r\n            />\r\n        </li>)\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n    id: PropTypes.number,\r\n    webformatURL: PropTypes.string,\r\n    tags: PropTypes.string,\r\n    largeImageURL: PropTypes.string,\r\n    showModal: PropTypes.func,\r\n    data: PropTypes.func,\r\n}","import PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem'\r\nimport './ImageGallery.css'\r\n\r\nexport default function ImageGallery({images,showModal, modalData}) {\r\n    return (\r\n        <ul className=\"ImageGallery\">\r\n            {images.map(({ id, webformatURL, tags, largeImageURL }) =>\r\n                <ImageGalleryItem\r\n                    key={id}\r\n                    webformatURL={webformatURL}\r\n                    tags={tags}\r\n                    largeImageURL={largeImageURL}\r\n                    data={modalData}\r\n                    showModal={showModal}\r\n                />\r\n            )}\r\n        </ul>\r\n    )\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n    images: PropTypes.array,\r\n    showModal: PropTypes.func,\r\n    modalData: PropTypes.func,\r\n}","import { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { createPortal } from 'react-dom';\r\nimport './Modal.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root')\r\n\r\nexport default function Modal({ onClose, src, alt }) {\r\n    const onCloseByClick = (e) => {\r\n        if (e.target.nodeName === 'DIV') {\r\n            onClose()\r\n        }\r\n    }\r\n\r\n    const onCloseByKedown = (e) => {\r\n        if (e.code === 'Escape') {\r\n            onClose()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('click', onCloseByClick)\r\n        window.addEventListener('keydown', onCloseByKedown)\r\n        return (\r\n            window.removeEventListener('keydown', onCloseByKedown)\r\n        )\r\n    })\r\n    \r\n    return createPortal(\r\n            <div className=\"Overlay\" onClose={onClose}>\r\n                <div className=\"Modal\">\r\n                    <img\r\n                        src={src}\r\n                        alt={alt}\r\n                    />\r\n                </div>\r\n            </div>,\r\n            modalRoot\r\n        )\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func,\r\n}","import PropTypes from 'prop-types';\r\nimport './Button.css'\r\n\r\nexport default function Button({ onClick }) {\r\n    return (\r\n        <button\r\n            className=\"Button\"\r\n            type='button'\r\n            onClick={onClick}\r\n        >\r\n            Load more\r\n        </button>\r\n    )\r\n}\r\n\r\nButton.propTypes = {\r\n    onClick: PropTypes.func,\r\n}","import { useState, useEffect } from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport Searchbar from './component/Searchbar/Searchbar';\nimport ImageGallery from \"./component/ImageGallery/ImageGallery\";\nimport Modal from \"./component/Modal/Modal\";\nimport Button from \"./component/Button/Button\";\nimport './App.css';\n\nexport default function App() {\n  const [value, setValue] = useState('')\n  const [page, setPage] = useState(1)\n  const [images, setImages] = useState([])\n  const [status, setStatus] = useState('idli')\n  const [showModal, setShowModal] = useState(false)\n  const [modalSrc, setModalSrc] = useState('')\n  const [modalAlt, setModalAlt]=useState('')\n\n  const BaseURL = 'https://pixabay.com/api/'\n  const keyURL = '23510997-d251ce775a3590a28eaf32d04'\n\n  const handleFormSubmit = (value) => {\n    setValue(value)\n  }\n\n  const modalData = (src, alt) => {\n    setModalSrc(src)\n    setModalAlt(alt)\n  }\n\n  const toggleModal = () => {\n    setShowModal((prev) => !prev)\n  }\n\n  const loadMore = () => {\n    setPage((prev) => prev + 1)\n    \n    fetch(`${BaseURL}?q=${value}&page=${page}&key=${keyURL}&image_type=photo&orientation=horizontal&per_page=12`)\n      .then(res => res.json())\n      .then((res) => {\n        setImages((prevState) => [...prevState, ...res.hits])\n        setStatus(\"resolved\")\n      })\n  }\n  \n  useEffect(() => {\n    if (!value) {\n      return;\n    }\n\n    setStatus('pending')\n    \n    fetch(\n      `${BaseURL}?q=${value}&page=${page}&key=${keyURL}&image_type=photo&orientation=horizontal&per_page=12`\n    )\n      .then(res => res.json())\n      .then((res) => {\n        setImages(res.hits)\n        setPage((prev) => prev + 1)\n        setStatus('resolved')\n      })\n  }, [value])\n\n  useEffect(() => {\n    window.addEventListener('click', (e) => {\n      if (e.target.nodeName === 'IMG') {\n        toggleModal()\n      }\n    })\n  })\n\n  return (\n      <div className='App'>\n        <Searchbar onSubmit={handleFormSubmit} />\n        {status === 'idli' && <div>Введите назание</div>}\n        {status === 'pending' && <Loader className=\"spin\" type=\"Bars\" color=\"#00BFFF\" height={200} width={200} />}\n        {status === 'resolved' && <ImageGallery\n          images={images}\n          showModal={toggleModal}\n          modalData={modalData}\n        />}\n        {images.length !== 0 && <Button onClick={loadMore}/>}\n        {showModal && <Modal\n          onClose={toggleModal}\n          src={modalSrc}\n          alt={modalAlt}\n        />}\n      </div>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}